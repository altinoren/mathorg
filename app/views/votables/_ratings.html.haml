- if not defined? scope 
  - scope = nil

- if not defined? disp_text
  - disp_text = nil

- if not defined? show_average
  - show_average = true

.vote{id: "#{votable.class}_#{votable.id}_#{format_scope(scope)}_rate"}
  %strong
    = (disp_text || scope || "Rating").capitalize + ':'

  - if user_signed_in?
    - current_user_vote = votable.get_upvotes(vote_scope: scope, voter_id: current_user.id)[0]
    - current_user_vote = current_user_vote[:vote_weight] unless current_user_vote.nil?

    .btn-group
      - for i in lower..upper
        - path = rate_path(rating: i, votable_id: votable.id, votable_type: votable.class, | 
          scope: scope, disp_text: disp_text, lower: lower, upper: upper)
        - ##::TODO:: there is probably a better implementation of this
        - text = (current_user_vote == i) ? raw("<strong>#{i}</strong>") : i
        = link_to text, path, { method: :post, remote: true, class: "btn btn-default" }


  = surround '( ', ' )' do
    - n = votable.get_upvotes(vote_scope: scope).size
    - if show_average
      = votable.get_upvotes(vote_scope: scope).sum(:vote_weight).to_f / n
      avg, 
    = n
    = "rating".pluralize(n) + " total"